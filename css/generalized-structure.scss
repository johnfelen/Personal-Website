/*Placeholder for the theme-structure, it is the general theme structure with the colors extracted into their own mixin*/
%theme-structure {
    overflow-x: hidden;

    .container-main {
        padding: 30px;
        border-radius: 10px;
        border-style: solid;
    }

    #picture-of-me {
        border-style: 2px solid;
        border-radius: 10px;
        width: 100%;
        opacity: 0;
    }

    blink, .select-name {
        visibility: hidden;
    }

    .fill-n-center {
        margin: 0px auto;
        width: 100%;
    }

    //vertical-center is based off the second answer http://stackoverflow.com/questions/8865458/how-to-align-text-vertically-center-in-div-with-css
    .vertical-center {
        display: flex;
        justify-content: center; // align horizontal
        align-items: center; // align vertical
    }

    .center-textarea-error {
        margin-top: 12px;
    }

    .form-group {
        margin-bottom: 0px;
    }

    //the rounded corners for the text area are based the accepted answer from http://stackoverflow.com/questions/26272350/rounded-corners-to-a-textarea */
    %rounded-textarea {
        width:100%;
        border-radius:10px;
        border: 3px solid transparent;
    }

    %rounded-textarea:focus {
        outline: none;
    }

    .rounded-textarea-small {
        @extend %rounded-textarea;
        resize: none;
    }

    .rounded-textarea-large {
        @extend %rounded-textarea;
        resize: vertical;
    }

    //pokemon part font, it will not change when theme changes
    .font-ubuntu-mono {
        font-family: 'Ubuntu Mono', ;
    }

    .font-small {
        font-size: 20px;
    }

    .font-medium {
        font-size: 28px;
    }

    .font-large {
        font-size: 44px;
    }

    .font-header {
        font-weight: 700;
        font-size: 60px;
    }

    .font-footer {
        font-size: 25px;
    }

    .font-center {
        text-align: center;
    }

    .font-left {
        text-align: left;
    }

    .font-right {
        text-align: right;
    }

    .navbar {
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        font-size: 32px;    //enlarges the glyphicon links
    }

    .nav > li {
        padding-left: 15px;
        padding-right: 15px;
    }

    .dropdown-menu {
        text-align: center;
        padding-left: 5px;
        padding-right: 5px;
    }

    .dropdown {
        display: inline-block;
    }

    // These change the navbar( portfolio sort ) when the screen width is too small, NOTE: I did grab this from stack overflow ages ago and I have tried to find where I got it to give credit for this project but I came up empty handed
    @media( min-width: 768px ) {
        .nav.navbar-nav {
            float: left;
        }

        .nav.navbar-nav {
            clear: left;
            float: left;
            margin: 0;
            padding: 0;
            position: relative;
            left: 50%;
            text-align: center;
        }

        .nav.navbar-nav > li {
            position: relative;
            right: 50%;
        }

        .nav.navbar-nav li {
            text-align: left;
        }
    }

    //when 75% of 1080p rotate portfolio titles 90 degrees, when the screen is minimized a lot the longer titles( with more spaces ) will overflow but not noticeable to most people
    @media( max-width: 1440px ) {
        .rotate {
            transform: rotate( -90deg );
        }
    }

    //allows hover to enable drop downs, from http://www.joostrap.com/support/tutorials-videos/202-how-to-enable-hover-for-nav-dropdowns
    .dropdown:hover .dropdown-menu {
        display: block;
    }

    .footer-margin-left {
        margin-left: 0.5em;
    }

    .footer-margin-right {
        margin-right: 0.5em;
    }

    .stop-animations {
        transition: none !important;
        transform: none !important;
        animation: none !important
    }

    //the rotate for footer icon and video-game-collectable-spin is based from http://www.the-art-of-web.com/css/3d-transforms/
    .footer-animation {
        animation-name: video-game-collectable-spin;
        animation-timing-function: ease-in-out;
        animation-iteration-count: infinite;
        animation-duration: 4s;
    }

    @keyframes video-game-collectable-spin {
        from {
            transform: rotateY( 0deg );
        }
        to {
            transform: rotateY( -360deg );
        }
    }

    .navbar-animation > a {
        transition: 0.5s linear;
        > i {   //this inner i child is so that the color changes only when the link is moving up/already up
            transition: 0.5s linear;
        }
    }

    .navbar-animation > a:hover {
        transform: translateY( -10px );
    }

    %animation-constants {
        animation-iteration-count: 1;
        animation-duration: 6s;
    }

    //falling is for the navbar transition between pages
    .fall-in {
        animation-name: falling;
        animation-timing-function: ease-out;
        @extend %animation-constants;
    }

    .fall-out {
        animation-name: falling;
        animation-timing-function: ease-in;
        @extend %animation-constants;
        animation-direction: reverse;
    }

    @keyframes falling {
        from {
            transform: translateY( -250px );
        }
        to {
            transform: translateY( 0px );
        }
    }

    //climbing is for the footer transitions between pages
    .climb-up {
        animation-name: climbing;
        animation-timing-function: ease-out;
        @extend %animation-constants;
    }

    .climb-down {
        animation-name: climbing;
        animation-timing-function: ease-in;
        @extend %animation-constants;
        animation-direction: reverse;
    }

    @keyframes climbing {
        from {
            transform: translateY( 250px );
        }
        to {
            transform: translateY( 0px );
        }
    }

    //panning is for the header and the main container transitions between pages
    .pan-on {
        animation-name: pan-on;
        animation-timing-function: ease-out;
        @extend %animation-constants;
    }

    .pan-off {
        animation-name: pan-off;
        animation-timing-function: ease-in;
        @extend %animation-constants;
    }

    @keyframes pan-on {
        from {
            transform: translateX( -1000px );
        }
        to {
            transform: translateX( 0px );
        }
    }

    @keyframes pan-off {
        from {
            transform: translateX( 0px );
        }
        to {
            transform: translateX( 1000px );
        }
    }

    //dropdown css animation
    .open > .dropdown-menu-animate {
        opacity: 1;
    }

    .dropdown-menu-animate {
        opacity: 0;
        transition: 0.5s linear;
    }
}

/*mixin for the colors, fonts, and background image*/
@mixin theme-specs( $primary, $secondary, $accent, $titleFont, $mainFont, $image ) {
    .subtle-pattern {
        background: url( $image ) repeat 0 0;
    }

    .font-title {
        font-family: $titleFont;
    }

    .font-main {
        font-family: $mainFont;
    }

    .color {
        color: $primary;
    }

    .color-error {
        color: $accent;
    }

    .form-control:focus {   //this removes the bootstrap efault blue and red shadow and the green and red outline on the textareas in the contact forms
        color: $accent;
        border-color: $accent;
        box-shadow: none;
    }

    .color-border {
        border-color: $primary;
    }

    .color-container {
        background-color: $secondary;
        border-color: $primary;
    }

    .color-reverse {
        background-color: $primary;
        color: $secondary;
    }

    .colored-link > a {
        color: $primary;
        text-decoration: none;
    }

    .colored-link > a:hover {
        color: $accent;
    }

    .accent-hover:hover {
        background-color: $accent;
    }

    %rounded-textarea:focus {   //placeholder here, is able to be extended from inside the theme-structure placeholder when .rounded-textarea-small and .rounded-textarea-large are defined
        background: $secondary;
    }

    .btn-color {
        background-color: $primary;
        color: $secondary;
        border-color: $secondary;
    }

    .btn-color:hover {
        background-color: $secondary;
        color: $primary;
        border-color: $primary;
    }

    //this is for when the input button is clicked in and held I found the correct pseudo selectors(for the :active:focus) at the verified answer for http://stackoverflow.com/questions/31379175/bootstrap-button-on-click-showing-default-colour
    .btn-color:active:focus {
        background-color: $primary;
        color: $secondary;
        border-color: $secondary;
    }

    .btn-color:focus {
        background-color: $primary;
        color: $secondary;
        border-color: $secondary;
    }

    .navbar {
        background-color: $primary;
    }

    .navbar-colors {
        color: $secondary;
    }

    .navbar-links > li > a:hover {
        background-color: transparent;
        > i {
            color: $accent;
        }
    }

    %nav-border {   //used to add borders around the theme dropdown menu, the selected navbar items and the sorting buttons on the portfolio
        border-style: solid;
        border-width: thin;
    }

    .nav-btn, .dropdown-menu > li > a {
        background-color: $primary;
        color: $secondary;
        @extend %nav-border;
        border-color: $primary;
    }

    .nav-btn:hover, .dropdown-menu > li > a:hover {
        background-color: $secondary;
        color: $primary;
        @extend %nav-border;
    }

    .dropdown-menu > li.active > a {
        background-color: $secondary;
        color: $primary;
    }

    .dropdown-menu > li.active > a:hover {
        background-color: $primary;
        color: $secondary;
    }

    .dropdown-menu {
        border-color: $primary;
        background-color: $primary;
    }

    //these four themes change the color of the arrow on the tour box, based on the first answer from http://stackoverflow.com/questions/25011758/how-can-we-change-the-color-of-arrow-in-the-popover-of-bootstrap
    .popover.right .arrow:after {
        border-right-color: $primary;
    }

    .popover.left .arrow:after {
        border-left-color: $primary;
    }

    .popover.top .arrow:after {
        border-top-color: $primary;
    }

    .popover.bottom .arrow:after {
        border-bottom-color: $primary;
    }
}
